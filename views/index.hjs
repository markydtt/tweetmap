<!DOCTYPE html>
<html ng-app>
  <head>
    <title>{{ title }}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA82fkcehl9NoHlieeEPe6VW2aybOt-DWs&sensor=false"></script>
    <script type="text/javascript">

    // Declare map variable here for to keep inside scope
    var map;

    // Get the map setup with our map-canvas div
      function initialize() {
        var mapOptions = {
          center: new google.maps.LatLng(-34.397, 150.644),
          zoom: 4,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map-canvas"),
            mapOptions);
        }
        google.maps.event.addDomListener(window, 'load', initialize);


      // Get socket.io connected and emitting tweets
      var socket = io.connect('http://localhost:3000');
      socket.on('newTwitt', function (data) {
       
        // Setup some variables for each tweet to make life easier
        var lat = data.geo.coordinates[0];
        var lng = data.geo.coordinates[1];
        var name = data.user.name;
        var screen_name = data.user.screen_name;
        var tweetText = data.text;
        var displayPicture = data.user.profile_image_url;

        // Post a marker for each new tweet
        var myLatlng = new google.maps.LatLng(lat,lng);
        var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: 'Hello World!'              
        });

        // Creating an info window with the tweet content
        var contentString = "<img class='displaypic' src='" + displayPicture + "'><strong>@" + screen_name + "</strong>: " + tweetText;
        // Assign content to the window
        var infowindow = new google.maps.InfoWindow({
          content: contentString
        });

        // Open the tweet info window
        infowindow.open(map,marker);

        // move our map to focus on the new tweet
        var newFocus = new google.maps.LatLng(lat,lng);
          map.setCenter(newFocus);
        });
        




        // Create the empty keyword array
        var keywords = new Array();
        function showKeywords(){
            var data = '';

            document.getElementById('keywordDisplay').style.visibility = "visible";
            var locationInput = document.getElementById('locationSearch').value;            
            var keywordInput = document.getElementById('keywordSearch').value;

            socket.emit('getTweets', keywordInput);






            var wordList = document.getElementById('words');
            // create second array for the new keywords
            var newkeywords = new Array();
            // Separate the keywords 
            newkeywords = keywordInput.split(' ');
            // Append all keywords into the original array
            keywords = keywords.concat(newkeywords);
            
            // Iterate through the array and add the keywords to the display
            // also remove any empty keywords
            words.innerHTML = '';
            for (var i = 0; i < keywords.length; i++){
              // Remove any additional spaces that a user may have entered
              if (keywords[i] == " " | keywords[i] == ""){
                 keywords.splice(i, 1);
              }
              // Create an <li> and remove link for each keyword
              else {
                 words.innerHTML+=  "<li>" + keywords[i] + " <a href=''>[Remove]</a></li>";
              }               
            }
            // Clear the textbox so users can enter more keywords
            document.getElementById('keywordSearch').value = '';
            console.log(keywords);

        }

  		
    </script>
  </head>
  <body>
  	<div id="map-canvas"></div>

    <!--- Search Form -->
    <div id="form">
      Keywords: <input type="text" id="keywordSearch"></input>
      Location: <input type="text" id="locationSearch"></input>
      <input type="submit" onclick="showKeywords()" value="Search!">
    </div>
    <!--- existing keywords -->
    <div id="keywordDisplay">
      Active Keywords:
      <ul id="words">
      </ul>
    </div>

    
  </body>
</html>